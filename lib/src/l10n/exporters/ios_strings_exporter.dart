import 'dart:io';

import '../l10n_entry.dart';
import 'l10n_exporter.dart';
import 'package:path/path.dart' as path;

import 'package:recase/recase.dart';

/// Export to iOS localization .strings file.
class IosStringsExporter extends L10nExporter {
  final String iosProjectPath;
  final String fileName;

  IosStringsExporter(this.iosProjectPath, this.fileName, String locale,
      Map<String, L10nEntry> data)
      : super(locale, data);

  @override
  Future<void> execute() async {
    final targetFileName = path.setExtension(fileName.pascalCase, '.strings');
    final date = DateTime.now().toIso8601String();
    final result = StringBuffer('''
/* 
  $targetFileName
  Runner

  Autogenerated by alex on $date.
  Copyright Â© 2019 The Chromium Authors. All rights reserved.

  ! DO NOT EDIT MANUALLY !
*/
''');

    data.forEach((key, value) {
      result..write(key)..write('="');

      if (value is L10nTextEntry) {
        result.write(_prepareStr(value.text));
      } else {
        throw Exception('Unhandled value type: ${value.runtimeType}');
      }

      result.writeln('";');
    });

    final iosLocale = locale.replaceAll('_', '-');

    final target = await _requireTargetFile(iosLocale, targetFileName);
    await target.writeAsString(result.toString());
  }

  Future<File> _requireTargetFile(
      String iosLocale, String targetFileName) async {
    final res = await _getTargetFile(iosLocale, targetFileName);
    final exist = await res.exists();

    if (!exist &&
        iosLocale.startsWith('zh-') &&
        iosLocale.split('-').length == 2) {
      for (final altLocale in ['Hans', 'Hant']
          .map((s) => iosLocale.replaceFirst('zh-', 'zh-$s-'))) {
        final altRes = await _getTargetFile(altLocale, targetFileName);
        final altExist = await altRes.exists();
        if (altExist) return altRes;
      }

      throw Exception('Cannot find file: ${res.path}');
    } else {
      return res;
    }
  }

  Future<File> _getTargetFile(String iosLocale, String targetFileName) async {
    final targetPath =
        path.join(iosProjectPath, 'Runner/$iosLocale.lproj/$targetFileName');
    final res = File(targetPath);

    return res;
  }

  String _prepareStr(String text) {
    return text.replaceAll('"', r'\"').replaceAll('\n', r'\n');
  }
}
